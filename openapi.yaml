openapi: 3.0.0
info:
  title: 꼬리콥터 API 명세
  description: 꼬리콥터 백엔드 API 명세서입니다. 초기 온보딩, 산책 기능, 코스 및 기록 관리를 위한 API들을 포함합니다.
  version: 1.0.0
servers:
  - url: http://localhost:5000/api/v1
    description: 개발 서버

tags:
  - name: 인증 및 온보딩
    description: 사용자 인증, 프로필 설정, 위치 및 견종 검색
  - name: 산책 기능
    description: 산책 기록 시작 및 종료, 마킹 포인트 등록, 코스 상세 정보
  - name: 코스 및 기록 관리
    description: 새로운 코스 등록, 산책 기록 목록 및 상세 정보 조회

paths:
  /auth/kakao:
    post:
      tags:
        - 인증 및 온보딩
      summary: 카카오 로그인/회원가입
      requestBody:
        description: 카카오 인증 코드를 포함한 요청
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: 카카오 로그인 후 리디렉션된 인증 코드
      responses:
        '200':
          description: 로그인 성공, 액세스 토큰 및 리프레시 토큰 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                      refreshToken:
                        type: string

  /auth/token/refresh:
    post:
      tags:
        - 인증 및 온보딩
      summary: 만료된 액세스 토큰 갱신
      requestBody:
        description: 리프레시 토큰을 포함한 요청
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: 새 액세스 토큰 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string

  /auth/logout:
    post:
      tags:
        - 인증 및 온보딩
      summary: 로그아웃
      responses:
        '200':
          description: 로그아웃 성공

  /users/me/terms:
    post:
      tags:
        - 인증 및 온보딩
      summary: 사용자 약관 동의 상태 저장
      requestBody:
        description: 약관 동의 상태
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isAgreed:
                  type: boolean
      responses:
        '200':
          description: 약관 동의 상태 저장 성공

  /locations/search:
    get:
      tags:
        - 인증 및 온보딩
      summary: 위치 검색
      parameters:
        - name: keyword
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 검색 결과 목록 반환

  /users/me/profile:
    put:
      tags:
        - 인증 및 온보딩
      summary: 사용자 및 반려동물 프로필 정보 등록/업데이트
      requestBody:
        description: 업데이트할 사용자 및 반려동물 프로필 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dogName:
                  type: string
                dogBreedId:
                  type: integer
                dogBirthYear:
                  type: integer
                dogSize:
                  type: string
                dogImageUrl:
                  type: string
                preferredLocationId:
                  type: integer
      responses:
        '200':
          description: 프로필 업데이트 성공
    get:
      tags:
        - 인증 및 온보딩
      summary: 사용자 및 반려동물 프로필 정보 조회
      responses:
        '200':
          description: 프로필 정보 반환
  
  /breeds/search:
    get:
      tags:
        - 인증 및 온보딩
      summary: 견종 검색
      parameters:
        - name: keyword
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 견종 검색 결과 목록 반환
  
  /users/me/summary-profile:
    get:
      tags:
        - 산책 기능
      summary: 대표 반려동물 이름 및 아이콘 정보 조회
      responses:
        '200':
          description: 프로필 요약 정보 반환

  /courses/recommendations:
    get:
      tags:
        - 산책 기능
      summary: 우리 동네 추천 코스 요약 목록 조회
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
        - name: longitude
          in: query
          required: true
          schema:
            type: number
        - name: radius
          in: query
          required: true
          schema:
            type: integer
        - name: sortBy
          in: query
          required: true
          schema:
            type: string
        - name: areaName
          in: query
          schema:
            type: string
        - name: petSize
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: 추천 코스 목록 반환

  /courses/{courseId}:
    get:
      tags:
        - 산책 기능
      summary: 선택된 추천 코스의 상세 정보 조회
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 코스 상세 정보 반환

  /walk-records:
    post:
      tags:
        - 산책 기능
      summary: 산책 기록 시작
      requestBody:
        description: 산책 시작 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                petId:
                  type: string
                startTime:
                  type: string
                  format: date-time
                startLatitude:
                  type: number
                startLongitude:
                  type: number
      responses:
        '201':
          description: 산책 기록 생성 성공

  /walk-records/{id}/track:
    patch:
      tags:
        - 산책 기능
      summary: 산책 경로 및 데이터 주기적 업데이트
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: 현재 위치 및 거리 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number
                distanceDelta:
                  type: number
      responses:
        '200':
          description: 업데이트 성공

  /walk-records/{id}/status:
    patch:
      tags:
        - 산책 기능
      summary: 산책 상태 일시정지/재개
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: 변경할 산책 상태
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [PAUSED, RESUMED]
      responses:
        '200':
          description: 상태 변경 성공

  /walk-records/{id}/end:
    put:
      tags:
        - 산책 기능
      summary: 산책 기록 최종 종료 및 전체 데이터 저장
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 산책 종료 및 저장 성공

  /marking-photos:
    post:
      tags:
        - 산책 기능
      summary: 새로운 마킹 포인트 등록 (50m 반경 통합 로직)
      requestBody:
        description: 마킹 포인트 사진 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                walkRecordId:
                  type: string
                latitude:
                  type: number
                longitude:
                  type: number
                photoUrl:
                  type: string
      responses:
        '201':
          description: 마킹 포인트 등록 성공

  /walk-records/{id}/score:
    put:
      tags:
        - 산책 기능
      summary: 꼬리콥터 점수 저장
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: 꼬리콥터 점수
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tailcopterScore:
                  type: number
      responses:
        '200':
          description: 점수 저장 성공

  /marking-photozones/{photozoneId}/photos:
    post:
      tags:
        - 산책 기능
      summary: 기존 포토존에 사진 추가
      parameters:
        - name: photozoneId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: 추가할 사진 URL
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoUrl:
                  type: string
                walkRecordId:
                  type: string
      responses:
        '201':
          description: 사진 추가 성공

  /courses/new:
    post:
      tags:
        - 코스 및 기록 관리
      summary: 새로운 코스 정보 최종 등록
      requestBody:
        description: 새로운 코스 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                walkRecordId:
                  type: string
                title:
                  type: string
                description:
                  type: string
                imageUrl:
                  type: string
                recommended:
                  type: boolean
      responses:
        '201':
          description: 코스 등록 성공

  /courses/new/details:
    get:
      tags:
        - 코스 및 기록 관리
      summary: 새로 생성할 코스의 기본 정보 조회
      parameters:
        - name: walkRecordId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 코스 기본 정보 반환

  /courses/{id}/marking-photozones:
    get:
      tags:
        - 코스 및 기록 관리
      summary: 코스 포토존 목록 조회
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 포토존 목록 반환

  /users/me/walk-records:
    get:
      tags:
        - 코스 및 기록 관리
      summary: 사용자의 모든 산책 기록 목록 조회
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [latest, longest, shortest]
            default: latest
      responses:
        '200':
          description: 산책 기록 목록 반환

  /walk-records/{id}/details:
    get:
      tags:
        - 코스 및 기록 관리
      summary: 산책 경로 및 마킹 이미지 등 상세 정보 조회
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 산책 상세 정보 반환

  /walk-records/{id}/save:
    post:
      tags:
        - 코스 및 기록 관리
      summary: 산책 기록 최종 저장 확정
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 산책 기록 저장 성공
