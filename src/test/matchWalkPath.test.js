// test/matchWalkPath.test.js

const { matchWalkPath } = require("../services/walkService");
const db = require("../models");
const { sequelize, Walk, User } = db;

console.log("✅ 현재 연결된 DB:", sequelize.config.database);

describe("🚶 matchWalkPath() 자유 산책 경로 분석", () => {
  let testUser;
  let testWalk;

  beforeAll(async () => {
    await sequelize.query('CREATE EXTENSION IF NOT EXISTS postgis;');
    await sequelize.sync({ force: true });

    testUser = await User.create({
      oauth_provider: "kakao",
      oauth_id: "test-kakao-id"
    });

    testWalk = await Walk.create({
      user_id: testUser.id,
      walk_date: new Date("2025-07-14"),
      status: "started",
      course_id: null,
      raw_coordinates: [
  { lat: 35.850707518661665, lng: 127.12681434265619, timestamp: "2025-07-14T12:00:00Z" },
  { lat: 35.85058122841012,  lng: 127.1268281310434,  timestamp: "2025-07-14T12:00:03Z" },
  { lat: 35.85047840787969,  lng: 127.12684054059173, timestamp: "2025-07-14T12:00:06Z" },
  { lat: 35.850364411048275, lng: 127.12683916175456, timestamp: "2025-07-14T12:00:09Z" },
  { lat: 35.85027637560748,  lng: 127.12685848897979, timestamp: "2025-07-14T12:00:12Z" },
  { lat: 35.85020837792044,  lng: 127.12687946166449, timestamp: "2025-07-14T12:00:15Z" },
  { lat: 35.85020271144384,  lng: 127.12694937061576, timestamp: "2025-07-14T12:00:18Z" },
  { lat: 35.850159268443875, lng: 127.127063555235,   timestamp: "2025-07-14T12:00:21Z" },
  { lat: 35.85013849134836,  lng: 127.12730357596519, timestamp: "2025-07-14T12:00:24Z" },
  { lat: 35.850083715343445, lng: 127.12755757848555, timestamp: "2025-07-14T12:00:27Z" },
  { lat: 35.850215933222145, lng: 127.12763447833129, timestamp: "2025-07-14T12:00:30Z" },
  { lat: 35.85025559854266,  lng: 127.12774400235332, timestamp: "2025-07-14T12:00:33Z" },
  { lat: 35.850270709135714, lng: 127.1278675081656,  timestamp: "2025-07-14T12:00:36Z" },
  { lat: 35.85037081674278,  lng: 127.12785585667393, timestamp: "2025-07-14T12:00:39Z" },
  { lat: 35.85040670434458,  lng: 127.12800033517237, timestamp: "2025-07-14T12:00:42Z" },
  { lat: 35.8502008226186,   lng: 127.1280609229292,  timestamp: "2025-07-14T12:00:45Z" },
  { lat: 35.84992883126202,  lng: 127.12812617128327, timestamp: "2025-07-14T12:00:48Z" },
  { lat: 35.84975290979389,  lng: 127.12820074044936, timestamp: "2025-07-14T12:00:51Z" },
  { lat: 35.84956681385779,  lng: 127.12829075975452, timestamp: "2025-07-14T12:00:54Z" },
  { lat: 35.84937180227527,  lng: 127.12838882182626, timestamp: "2025-07-14T12:00:57Z" },
    { lat: 35.84917913981285,  lng: 127.12849601554962, timestamp: "2025-07-14T12:01:00Z" },
  { lat: 35.84894492207194,  lng: 127.1286032092745,  timestamp: "2025-07-14T12:01:03Z" },
  { lat: 35.848793813485045, lng: 127.12871739389374, timestamp: "2025-07-14T12:01:06Z" },
  { lat: 35.84857757170529,  lng: 127.12879401636849, timestamp: "2025-07-14T12:01:09Z" },
  { lat: 35.848445223228794, lng: 127.12889104669114, timestamp: "2025-07-14T12:01:12Z" },
  { lat: 35.848269558361906, lng: 127.12897726773133, timestamp: "2025-07-14T12:01:15Z" },
  { lat: 35.84809955973317,  lng: 127.12904950697981, timestamp: "2025-07-14T12:01:18Z" },
  { lat: 35.847956005051856, lng: 127.12912640682555, timestamp: "2025-07-14T12:01:21Z" },
  { lat: 35.84779088234757,  lng: 127.1292246528202,  timestamp: "2025-07-14T12:01:24Z" },
  { lat: 35.84762466046658,  lng: 127.1293178647548,  timestamp: "2025-07-14T12:01:27Z" },
  { lat: 35.847494327157705, lng: 127.12935747982698, timestamp: "2025-07-14T12:01:30Z" },
  { lat: 35.84732997598772,  lng: 127.12934407301867, timestamp: "2025-07-14T12:01:33Z" },
  { lat: 35.8471883088109,   lng: 127.1292834852618,  timestamp: "2025-07-14T12:01:36Z" },
  { lat: 35.84711449916274,  lng: 127.12911311338536, timestamp: "2025-07-14T12:01:39Z" },
  { lat: 35.84699172062369,  lng: 127.12895698339673, timestamp: "2025-07-14T12:01:42Z" },
  { lat: 35.8468274133195,   lng: 127.1288490263338,  timestamp: "2025-07-14T12:01:45Z" },
  { lat: 35.846654129758065, lng: 127.12886675169199, timestamp: "2025-07-14T12:01:48Z" },
  { lat: 35.84652028151859,  lng: 127.12893714602563, timestamp: "2025-07-14T12:01:51Z" },
  { lat: 35.846458039453765, lng: 127.12901214652595, timestamp: "2025-07-14T12:01:54Z" },
  { lat: 35.84637408496353,  lng: 127.12908893275255, timestamp: "2025-07-14T12:01:57Z" },
    { lat: 35.84625533366666,  lng: 127.12904428725949, timestamp: "2025-07-14T12:02:00Z" },
  { lat: 35.846171378961884, lng: 127.12896750103289, timestamp: "2025-07-14T12:02:03Z" },
  { lat: 35.84605712667212,  lng: 127.12886842553564, timestamp: "2025-07-14T12:02:06Z" },
  { lat: 35.84589790175768,  lng: 127.12877735349997, timestamp: "2025-07-14T12:02:09Z" },
  { lat: 35.84579512914321,  lng: 127.12869342436994, timestamp: "2025-07-14T12:02:12Z" },
  { lat: 35.845677881350184, lng: 127.12860413805839, timestamp: "2025-07-14T12:02:15Z" },
  { lat: 35.84552858112664,  lng: 127.12850685317198, timestamp: "2025-07-14T12:02:18Z" },
  { lat: 35.845437530887054, lng: 127.1284537097008,  timestamp: "2025-07-14T12:02:21Z" },
  { lat: 35.84542141745477,  lng: 127.12837842636583, timestamp: "2025-07-14T12:02:24Z" },
  { lat: 35.84546698382563,  lng: 127.12818971073335, timestamp: "2025-07-14T12:02:27Z" },
  { lat: 35.84550278595614,  lng: 127.12805720826714, timestamp: "2025-07-14T12:02:30Z" },
  { lat: 35.84555195445492,  lng: 127.12794897891808, timestamp: "2025-07-14T12:02:33Z" },
  { lat: 35.84559014619384,  lng: 127.12782019657078, timestamp: "2025-07-14T12:02:36Z" },
  { lat: 35.845573596442435, lng: 127.1276207409864,  timestamp: "2025-07-14T12:02:39Z" },
  { lat: 35.84556977726896,  lng: 127.12743227901615, timestamp: "2025-07-14T12:02:42Z" },
  { lat: 35.84556850421083,  lng: 127.12725166962889, timestamp: "2025-07-14T12:02:45Z" },
  { lat: 35.84554431610492,  lng: 127.12707106023981, timestamp: "2025-07-14T12:02:48Z" },
  { lat: 35.845526493285945, lng: 127.12692814324703, timestamp: "2025-07-14T12:02:51Z" },
  { lat: 35.84553285857896,  lng: 127.12685904052455, timestamp: "2025-07-14T12:02:54Z" },
  { lat: 35.84539584061413,  lng: 127.12689639807536, timestamp: "2025-07-14T12:02:57Z" },
  { lat: 35.845267261373166, lng: 127.12691681478913, timestamp: "2025-07-14T12:03:00Z" },
  { lat: 35.84514250111803,  lng: 127.12694979563378, timestamp: "2025-07-14T12:03:03Z" },
  { lat: 35.84503938279987,  lng: 127.12699062905949, timestamp: "2025-07-14T12:03:06Z" },
  { lat: 35.8449674417118,   lng: 127.12699979985854, timestamp: "2025-07-14T12:03:09Z" },
  { lat: 35.84491934814598,  lng: 127.1268045834442,  timestamp: "2025-07-14T12:03:12Z" },
  { lat: 35.8448914228358,   lng: 127.12669166414759, timestamp: "2025-07-14T12:03:15Z" },
  { lat: 35.844770413046305, lng: 127.12674525296597, timestamp: "2025-07-14T12:03:18Z" },
  { lat: 35.84470835667241,  lng: 127.1268332917412,  timestamp: "2025-07-14T12:03:21Z" },
  { lat: 35.84470680526229,  lng: 127.12693089994713, timestamp: "2025-07-14T12:03:24Z" },
  { lat: 35.844652505894175, lng: 127.1269538665843,  timestamp: "2025-07-14T12:03:27Z" },
  { lat: 35.84463388895968,  lng: 127.12705338867693, timestamp: "2025-07-14T12:03:30Z" },
  { lat: 35.844664917181575, lng: 127.12715291076944, timestamp: "2025-07-14T12:03:33Z" },
  { lat: 35.84473317922779,  lng: 127.12735961050117, timestamp: "2025-07-14T12:03:36Z" },
  { lat: 35.844574216546135, lng: 127.12736908141522, timestamp: "2025-07-14T12:03:39Z" },
  { lat: 35.84437142420364,  lng: 127.12764954491877, timestamp: "2025-07-14T12:03:42Z" },
  { lat: 35.84432098967724,  lng: 127.12769903645312, timestamp: "2025-07-14T12:03:45Z" },
  { lat: 35.84421553556399,  lng: 127.12761702191057, timestamp: "2025-07-14T12:03:48Z" },
  { lat: 35.84415019979265,  lng: 127.12757742868234, timestamp: "2025-07-14T12:03:51Z" },
  { lat: 35.844084883005664, lng: 127.12755683960472, timestamp: "2025-07-14T12:03:54Z" },
  { lat: 35.84403150750164,  lng: 127.1275098068968,  timestamp: "2025-07-14T12:03:57Z" },
  { lat: 35.84396177744139,  lng: 127.12744675405321, timestamp: "2025-07-14T12:04:00Z" }
]



    });
  });

  it("🟢 경로 분석 후 walk_path 및 거리/시간이 정상적으로 계산되어야 합니다.", async () => {
    await matchWalkPath(testWalk.id);
    const updatedWalk = await Walk.findByPk(testWalk.id);

    expect(updatedWalk.walk_path).not.toBeNull();
    
    // 💡 DB에서 문자열로 반환된 total_distance를 숫자로 변환하여 비교
    expect(parseFloat(updatedWalk.total_distance)).toBeGreaterThan(0);
    
    const start = new Date(testWalk.raw_coordinates[0].timestamp);
const end = new Date(testWalk.raw_coordinates[testWalk.raw_coordinates.length - 1].timestamp);
const expectedDuration = Math.floor((end - start) / 1000);

expect(updatedWalk.total_time).toBe(expectedDuration);
  },10000);    // 타임아웃을 10000초로 늘림

  afterAll(async () => {
    await sequelize.close();
  });
});
